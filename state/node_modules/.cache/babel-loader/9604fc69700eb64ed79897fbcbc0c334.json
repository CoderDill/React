{"ast":null,"code":"var _jsxFileName = \"/home/crappydill/CrappyCoder/react/state/src/NumberGame.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./NumberGame.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NumberGame = props => {\n  _s();\n\n  const genRandom = () => Math.floor(Math.random() * 10) + 1;\n\n  const restart = () => {};\n\n  const [guess, setGuess] = useState(genRandom());\n  const [target, setTarget] = useState(genRandom());\n  const isWinner = target === guess;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Target Num: \", target]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: isWinner ? \"winner\" : \"loser\",\n      children: [\"Your Guess: \", guess]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), !isWinner && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setGuess(genRandom()),\n      children: \"Generate Num\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => restart,\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NumberGame, \"3gI1kqIq2/B8XT66BBXnsMMGVFA=\");\n\n_c = NumberGame;\nexport default NumberGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"NumberGame\");","map":{"version":3,"sources":["/home/crappydill/CrappyCoder/react/state/src/NumberGame.js"],"names":["React","useState","NumberGame","props","genRandom","Math","floor","random","restart","guess","setGuess","target","setTarget","isWinner"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,kBAAP;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,SAAS,GAAG,MAAMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAAzD;;AACA,QAAMC,OAAO,GAAG,MAAM,CAErB,CAFD;;AAIF,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACG,SAAS,EAAV,CAAlC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAACG,SAAS,EAAV,CAApC;AACA,QAAMS,QAAQ,GAAGF,MAAM,KAAKF,KAA5B;AACA,sBACE;AAAA,4BACE;AAAA,iCAAiBE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAEE,QAAQ,GAAG,QAAH,GAAc,OAArC;AAAA,iCAA2DJ,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGG,CAACI,QAAD,iBACC;AAAQ,MAAA,OAAO,EAAE,MAAMH,QAAQ,CAACN,SAAS,EAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAME;AAAQ,MAAA,OAAO,EAAE,MAAOI,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAUD,CAnBD;;GAAMN,U;;KAAAA,U;AAqBN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./NumberGame.css\";\n\nconst NumberGame = (props) => {\n    const genRandom = () => Math.floor(Math.random() * 10) + 1;\n    const restart = () => {\n        \n    }\n\n  const [guess, setGuess] = useState(genRandom());\n  const [target, setTarget] = useState(genRandom());\n  const isWinner = target === guess;\n  return (\n    <>\n      <h1>Target Num: {target}</h1>\n      <h1 className={isWinner ? \"winner\" : \"loser\"}>Your Guess: {guess}</h1>\n      {!isWinner && (\n        <button onClick={() => setGuess(genRandom())}>Generate Num</button>\n      )}\n      <button onClick={() => (restart)}>Restart</button>\n    </>\n  );\n};\n\nexport default NumberGame;\n"]},"metadata":{},"sourceType":"module"}