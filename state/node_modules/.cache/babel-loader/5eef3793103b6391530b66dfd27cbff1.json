{"ast":null,"code":"var _jsxFileName = \"/home/crappydill/CrappyCoder/react/state/src/NumberGame.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./NumberGame.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NumberGame = props => {\n  _s();\n\n  const genRandom = () => Math.floor(Math.random() * 10) + 1;\n\n  const restart = () => {\n    setTarget(genRandom());\n    setGuess(0);\n    setGuessCount;\n  };\n\n  const makeGuess = () => {\n    setGuess(genRandom());\n    setGuessCount(guessCount + 1);\n  };\n\n  const [guess, setGuess] = useState(genRandom());\n  const [target, setTarget] = useState(genRandom());\n  const [guessCount, setGuessCount] = useState(0);\n  const isWinner = target === guess;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Target Num: \", target]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: isWinner ? \"winner\" : \"loser\",\n      children: [\"Your Guess: \", guess]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Guess Trys: \", guessCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), !isWinner && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: makeGuess,\n      children: \"Generate Num\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: restart,\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NumberGame, \"b6Lv/Iwf+14uBogXYGXqjr2+BNM=\");\n\n_c = NumberGame;\nexport default NumberGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"NumberGame\");","map":{"version":3,"sources":["/home/crappydill/CrappyCoder/react/state/src/NumberGame.js"],"names":["React","useState","NumberGame","props","genRandom","Math","floor","random","restart","setTarget","setGuess","setGuessCount","makeGuess","guessCount","guess","target","isWinner"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,kBAAP;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAMC,SAAS,GAAG,MAAMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAAzD;;AACA,QAAMC,OAAO,GAAG,MAAM;AACpBC,IAAAA,SAAS,CAACL,SAAS,EAAV,CAAT;AACEM,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAC,IAAAA,aAAa;AAChB,GAJD;;AAKE,QAAMC,SAAS,GAAG,MAAM;AACpBF,IAAAA,QAAQ,CAACN,SAAS,EAAV,CAAR;AACAO,IAAAA,aAAa,CAACE,UAAU,GAAG,CAAd,CAAb;AACL,GAHC;;AAIF,QAAM,CAACC,KAAD,EAAQJ,QAAR,IAAoBT,QAAQ,CAACG,SAAS,EAAV,CAAlC;AACA,QAAM,CAACW,MAAD,EAASN,SAAT,IAAsBR,QAAQ,CAACG,SAAS,EAAV,CAApC;AACA,QAAM,CAACS,UAAD,EAAaF,aAAb,IAA8BV,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAMe,QAAQ,GAAGD,MAAM,KAAKD,KAA5B;AACA,sBACE;AAAA,4BACE;AAAA,iCAAiBC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAEC,QAAQ,GAAG,QAAH,GAAc,OAArC;AAAA,iCAA2DF,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,iCAAgBD,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIG,CAACG,QAAD,iBACC;AAAQ,MAAA,OAAO,EAAEJ,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAOE;AAAQ,MAAA,OAAO,EAAEJ,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAWD,CA1BD;;GAAMN,U;;KAAAA,U;AA4BN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./NumberGame.css\";\n\nconst NumberGame = (props) => {\n  const genRandom = () => Math.floor(Math.random() * 10) + 1;\n  const restart = () => {\n    setTarget(genRandom());\n      setGuess(0);\n      setGuessCount\n  };\n    const makeGuess = () => {\n        setGuess(genRandom())\n        setGuessCount(guessCount + 1)\n  }\n  const [guess, setGuess] = useState(genRandom());\n  const [target, setTarget] = useState(genRandom());\n  const [guessCount, setGuessCount] = useState(0);\n  const isWinner = target === guess;\n  return (\n    <>\n      <h1>Target Num: {target}</h1>\n      <h2 className={isWinner ? \"winner\" : \"loser\"}>Your Guess: {guess}</h2>\n      <p>Guess Trys: {guessCount}</p>\n      {!isWinner && (\n        <button onClick={makeGuess}>Generate Num</button>\n      )}\n      <button onClick={restart}>Restart</button>\n    </>\n  );\n};\n\nexport default NumberGame;\n"]},"metadata":{},"sourceType":"module"}